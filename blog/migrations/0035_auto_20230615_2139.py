# Generated by Django 3.2.19 on 2023-06-15 21:39

import common.models.helpers
from django.db import migrations
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


def update_lead_graphic(apps, schema_editor):
    BlogPage = apps.get_model("blog", "BlogPage")

    for page in BlogPage.objects.all():
        if page.lead_image:
            page.lead_graphic = wagtail.blocks.StreamValue(
                stream_block=page.lead_graphic.stream_block,
                stream_data=[{"type": "image", "value": page.lead_image.pk}]
            )
            page.save()


def update_teaser_graphic(apps, schema_editor):
    BlogPage = apps.get_model("blog", "BlogPage")

    for page in BlogPage.objects.all():
        if page.teaser_image:
            page.teaser_graphic = wagtail.blocks.StreamValue(
                stream_block=page.teaser_graphic.stream_block,
                stream_data=[{"type": "image", "value": page.teaser_image}]
            )
            page.save()


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0034_update_and_migrate_incident_set_categories'),
    ]

    operations = [
        migrations.AddField(
            model_name='blogpage',
            name='lead_graphic',
            field=wagtail.fields.StreamField([('image', wagtail.images.blocks.ImageChooserBlock()), ('vertical_bar_chart', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('incident_set', wagtail.blocks.StructBlock([('categories', wagtail.blocks.MultipleChoiceBlock(choices=common.models.helpers.get_categories, help_text='If selected, incidents belonging to any of the selected categories will be included.', label='Filter by Category', required=False)), ('tag', wagtail.blocks.ChoiceBlock(choices=common.models.helpers.get_tags, help_text='If selected, only incidents with the chosen tag will be included.', label='Filter by Tag', required=False)), ('lower_date', wagtail.blocks.DateBlock(help_text='If set, no incidents before this date will be included.', label='Filter by Date, lower bound', required=False)), ('upper_date', wagtail.blocks.DateBlock(help_text='If set, no incidents after this date will be included.', label='Filter by Date, upper bound', required=False))])), ('time_period', wagtail.blocks.ChoiceBlock(choices=[('months', 'Months'), ('years', 'Years')], help_text='Choose whether to display bars aggregated by months or years. If not provided, will default to months if there is less than two years of data, years if there is more than two years of data.', label='Display by', required=False)), ('description', wagtail.blocks.TextBlock(help_text='Description for assistive technology users. If the chart is demonstrating a specific trend, try to include that, e.g., "Bar chart showing a decreasing number of assaults over the course of 2023."', required=True))])), ('tree_map_chart', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('incident_set', wagtail.blocks.StructBlock([('categories', wagtail.blocks.MultipleChoiceBlock(choices=common.models.helpers.get_categories, help_text='If selected, incidents belonging to any of the selected categories will be included.', label='Filter by Category', required=False)), ('tag', wagtail.blocks.ChoiceBlock(choices=common.models.helpers.get_tags, help_text='If selected, only incidents with the chosen tag will be included.', label='Filter by Tag', required=False)), ('lower_date', wagtail.blocks.DateBlock(help_text='If set, no incidents before this date will be included.', label='Filter by Date, lower bound', required=False)), ('upper_date', wagtail.blocks.DateBlock(help_text='If set, no incidents after this date will be included.', label='Filter by Date, upper bound', required=False))])), ('description', wagtail.blocks.TextBlock(help_text='Description for assistive technology users. If the chart is demonstrating a specific trend, try to include that, e.g., "Bar chart showing a decreasing number of assaults over the course of 2023."', required=True))])), ('bubble_map_chart', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('incident_set', wagtail.blocks.StructBlock([('categories', wagtail.blocks.MultipleChoiceBlock(choices=common.models.helpers.get_categories, help_text='If selected, incidents belonging to any of the selected categories will be included.', label='Filter by Category', required=False)), ('tag', wagtail.blocks.ChoiceBlock(choices=common.models.helpers.get_tags, help_text='If selected, only incidents with the chosen tag will be included.', label='Filter by Tag', required=False)), ('lower_date', wagtail.blocks.DateBlock(help_text='If set, no incidents before this date will be included.', label='Filter by Date, lower bound', required=False)), ('upper_date', wagtail.blocks.DateBlock(help_text='If set, no incidents after this date will be included.', label='Filter by Date, upper bound', required=False))])), ('group_by', wagtail.blocks.ChoiceBlock(choices=[('state', 'State'), ('city', 'City')], help_text='Choose whether to group by city or by state', label='Group Incidents by')), ('description', wagtail.blocks.TextBlock(help_text='Description for assistive technology users. If the chart is demonstrating a specific trend, try to include that, e.g., "Bar chart showing a decreasing number of assaults over the course of 2023."', required=True))]))], blank=True, default=[], use_json_field=True),
        ),
        migrations.AddField(
            model_name='blogpage',
            name='teaser_graphic',
            field=wagtail.fields.StreamField([('image', wagtail.images.blocks.ImageChooserBlock()), ('vertical_bar_chart', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('incident_set', wagtail.blocks.StructBlock([('categories', wagtail.blocks.MultipleChoiceBlock(choices=common.models.helpers.get_categories, help_text='If selected, incidents belonging to any of the selected categories will be included.', label='Filter by Category', required=False)), ('tag', wagtail.blocks.ChoiceBlock(choices=common.models.helpers.get_tags, help_text='If selected, only incidents with the chosen tag will be included.', label='Filter by Tag', required=False)), ('lower_date', wagtail.blocks.DateBlock(help_text='If set, no incidents before this date will be included.', label='Filter by Date, lower bound', required=False)), ('upper_date', wagtail.blocks.DateBlock(help_text='If set, no incidents after this date will be included.', label='Filter by Date, upper bound', required=False))])), ('time_period', wagtail.blocks.ChoiceBlock(choices=[('months', 'Months'), ('years', 'Years')], help_text='Choose whether to display bars aggregated by months or years. If not provided, will default to months if there is less than two years of data, years if there is more than two years of data.', label='Display by', required=False)), ('description', wagtail.blocks.TextBlock(help_text='Description for assistive technology users. If the chart is demonstrating a specific trend, try to include that, e.g., "Bar chart showing a decreasing number of assaults over the course of 2023."', required=True))])), ('tree_map_chart', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('incident_set', wagtail.blocks.StructBlock([('categories', wagtail.blocks.MultipleChoiceBlock(choices=common.models.helpers.get_categories, help_text='If selected, incidents belonging to any of the selected categories will be included.', label='Filter by Category', required=False)), ('tag', wagtail.blocks.ChoiceBlock(choices=common.models.helpers.get_tags, help_text='If selected, only incidents with the chosen tag will be included.', label='Filter by Tag', required=False)), ('lower_date', wagtail.blocks.DateBlock(help_text='If set, no incidents before this date will be included.', label='Filter by Date, lower bound', required=False)), ('upper_date', wagtail.blocks.DateBlock(help_text='If set, no incidents after this date will be included.', label='Filter by Date, upper bound', required=False))])), ('description', wagtail.blocks.TextBlock(help_text='Description for assistive technology users. If the chart is demonstrating a specific trend, try to include that, e.g., "Bar chart showing a decreasing number of assaults over the course of 2023."', required=True))])), ('bubble_map_chart', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('incident_set', wagtail.blocks.StructBlock([('categories', wagtail.blocks.MultipleChoiceBlock(choices=common.models.helpers.get_categories, help_text='If selected, incidents belonging to any of the selected categories will be included.', label='Filter by Category', required=False)), ('tag', wagtail.blocks.ChoiceBlock(choices=common.models.helpers.get_tags, help_text='If selected, only incidents with the chosen tag will be included.', label='Filter by Tag', required=False)), ('lower_date', wagtail.blocks.DateBlock(help_text='If set, no incidents before this date will be included.', label='Filter by Date, lower bound', required=False)), ('upper_date', wagtail.blocks.DateBlock(help_text='If set, no incidents after this date will be included.', label='Filter by Date, upper bound', required=False))])), ('group_by', wagtail.blocks.ChoiceBlock(choices=[('state', 'State'), ('city', 'City')], help_text='Choose whether to group by city or by state', label='Group Incidents by')), ('description', wagtail.blocks.TextBlock(help_text='Description for assistive technology users. If the chart is demonstrating a specific trend, try to include that, e.g., "Bar chart showing a decreasing number of assaults over the course of 2023."', required=True))]))], blank=True, default=[], use_json_field=True),
        ),
        migrations.RunPython(update_lead_graphic, reverse_code=migrations.RunPython.noop, elidable=True),
        migrations.RunPython(update_teaser_graphic, reverse_code=migrations.RunPython.noop, elidable=True),
    ]
