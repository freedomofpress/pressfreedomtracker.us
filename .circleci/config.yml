version: 2
jobs:
  safety_check:
    machine: true
    working_directory: ~/tracker
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            # Set to native py3 on circleci image
            pyenv global 3.5.2
            pip install -U pip
            pip install pipenv
            pipenv install

      - run:
          name: Check Python dependencies for CVEs
          command: make safety

      - run:
          name: Static code analysis for vulnerabilities
          command: make bandit

      - run:
          name: Run flake8 tests
          command: make flake8

  npm_audit:
    machine: true
    working_directory: ~/freedom.press
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            # Set to native py3 on circleci image
            pyenv global 3.5.2
            pip install -U pip
            pip install pipenv
            pipenv install
      - run:
          name: Check node dependencies for vulnerabilities
          command: |
            pipenv run make dev-init
            pipenv run make ci-npm-audit
      - store_test_results:
          path: ~/freedom.press/test-results/

  dev:
    machine: true
    working_directory: ~/tracker
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            # Set to native py3 on circleci image
            pyenv global 3.5.2
            pip install -U pip
            pip install pipenv
            pipenv install

      - run:
          name: Ensure we can run dev-env
          command: |
            make dev-init
            pipenv run docker-compose up -d
            while ! curl --output /dev/null --silent --head --fail http://localhost:8000; do sleep 1 && echo -n .; done;
            pipenv run make dev-tests

  prod:
    machine: true
    working_directory: ~/pressfreedom
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            # Set to native py3 on circleci image
            pyenv global 3.5.2
            pip install -U pip
            pip install pipenv
            pipenv install

      - run:
          name: Ensure we can run prod-env
          command: |
            pipenv run docker-compose -f prod-docker-compose.yaml build
            pipenv run docker-compose -f prod-docker-compose.yaml up -d
            while ! curl --output /dev/null --silent --head --fail http://$(docker-compose -f prod-docker-compose.yaml port nginx 8080); do sleep 1 && echo -n .; done;
            pipenv run docker-compose -f prod-docker-compose.yaml exec django /bin/bash -c "./manage.py createdevdata"
            pipenv run pytest devops/tests/test_basic.py

      - run:
          name: Push prod containers
          command: |
            docker login -u "${QUAY_USER}" -p "${QUAY_PASS}" quay.io || true
            make prod-push || true

workflows:
  version: 2
  tracker_ci:
    jobs:
      - safety_check
      - npm_audit
      - dev
      - prod:
          requires:
            - dev
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - safety_check
