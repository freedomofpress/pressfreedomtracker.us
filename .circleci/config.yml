---
reuse-blerbs:
  - &python_prereqs
    run:
      environment:
        SETUPTOOLS_USE_DISTUTILS: stdlib
      name: Install testing pre-reqs
      command: |
        # Set python to 3.9.1
        pyenv versions
        pyenv global 3.9.1
        pip install -U pip
        pip install pipenv
        pipenv sync

version: 2.1
commands:
  check-changed-files-or-halt:
    description: "Halt job if changed any changed file matches pattern"
    parameters:
      pattern:
        type: string
    steps:
      - run: git diff --name-only develop...HEAD|grep -q '<< parameters.pattern >>' || circleci step halt

jobs:
  safety_check:
    environment:
      SETUPTOOLS_USE_DISTUTILS: stdlib
    machine:
      image: ubuntu-2004:202101-01
    working_directory: ~/tracker
    steps:
      - checkout

      - *python_prereqs

      - run:
          name: Check Python dependencies for CVEs
          command: make safety

      - run:
          name: Static code analysis for vulnerabilities
          command: make bandit

      - run:
          name: Run flake8 tests
          command: make flake8

  npm_audit:
    environment:
      SETUPTOOLS_USE_DISTUTILS: stdlib
    machine:
      image: ubuntu-2004:202101-01
    working_directory: ~/tracker
    steps:
      - checkout
      - check-changed-files-or-halt:
          pattern: ^package-lock.json$

      - *python_prereqs

      - run:
          name: Check node dependencies for vulnerabilities
          command: |
            pipenv run make dev-init
            pipenv run make ci-npm-audit
      - store_test_results:
          path: ~/tracker/test-results/

  dev:
    environment:
      SETUPTOOLS_USE_DISTUTILS: stdlib
    machine:
      image: ubuntu-2004:202101-01
    working_directory: ~/tracker
    steps:
      - checkout

      - *python_prereqs

      - run:
          name: Ensure we can run dev-env
          command: |
            make dev-init
            pipenv run docker-compose up -d
            while ! curl --output /dev/null --silent --head --fail http://localhost:8000; do sleep 5; done;
            pipenv run make dev-tests
            pipenv run make dev-jest-tests
            pipenv run make check-migrations
          no_output_timeout: 5m

      - store_artifacts:
          path: htmlcov

      - persist_to_workspace:
          root: .
          paths:
            - ./coverage.xml

      - run:
          name: Yank docker logs
          command: |
            mkdir -p ~/dockercomposelogs || true
            pipenv run docker-compose logs > ~/dockercomposelogs/dev.log
          when: always

      - store_artifacts:
          path: ~/dockercomposelogs

  prod:
    environment:
      SETUPTOOLS_USE_DISTUTILS: stdlib
    machine:
      image: ubuntu-2004:202101-01
    working_directory: ~/pressfreedom
    steps:
      - checkout

      - *python_prereqs

      - run:
          name: Ensure we can run prod-env
          command: |
            pipenv run docker-compose -f prod-docker-compose.yaml build
            pipenv run docker-compose -f prod-docker-compose.yaml up -d
            while ! curl --output /dev/null --silent --head --fail http://localhost:8000; do sleep 5; done;
            pipenv run docker-compose -f prod-docker-compose.yaml exec django /bin/bash -c "./manage.py createdevdata --no-download"
            pipenv run pytest devops/tests/test_basic.py
          no_output_timeout: 5m

      - run:
          name: Yank docker logs
          command: |
            mkdir -p ~/dockercomposelogs || true
            pipenv run docker-compose -f prod-docker-compose.yaml logs > ~/dockercomposelogs/prod.log
          when: always

      - store_artifacts:
          path: ~/dockercomposelogs

  coverage:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            python -m pip install --upgrade pip
            pip install --require-hashes -r ci-requirements.txt

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Compare coverage to base branch
          command: |
            diff-cover /tmp/workspace/coverage.xml --compare-branch=origin/develop --fail-under=100


workflows:
  version: 2
  tracker_ci:
    jobs:
      - safety_check
      - npm_audit
      - dev
      - prod
      - coverage:
          requires:
            - dev

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - develop
    jobs:
      - safety_check
