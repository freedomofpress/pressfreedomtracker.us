---

- name: Gather facts from all hosts
  hosts: all
  become: yes
  tasks:
  tasks:
    - set_fact:
        django_root: /var/www/django
#    - hostname:
#        name: "{{ inventory_hostname }}"
  tags: always

- name: Establish certs
  hosts: all
  become: yes
  roles:
    - role: freedomofpress.openssl_node
      tags: ssl-node

- name: Setup postgres
  hosts: database
  become: yes
  pre_tasks:
    - name: Ensure ssl-cert user exists
      group:
        name: ssl-cert

    - name: Allow postgres user access
      file:
        path: /etc/ssl/private/{{ansible_fqdn}}-key.pem
        mode: 0640
        group: ssl-cert
  roles:
    - role: ANXS.postgresql
      tags: postgres
  vars:
    postgresql_users:
      - name: django_user
        pass: django_password
    postgresql_databases:
      - name: pressfreedom
        owner: django_user
    postgresql_user_privileges:
      - name: django_user
        db: pressfreedom
        priv: "ALL"
        role_attr_flags: "CREATEDB"

- name: Run django environment
  hosts: django
  become: yes
  pre_tasks:
    - name: Create user
      user:
        name: "{{ django_stack_gcorn_user }}"
        home: "{{ django_stack_gcorn_home }}"
        createhome: yes
      tags: node
  roles:
    - role: jdauphant.nginx
      tags: nginx

    - role: geerlingguy.nodejs
      tags: node

    - role: freedomofpress.django_stack
      tags: django
  vars:
    django_stack_superuser_admin: admin
    django_stack_superuser_email: mike@freedom.press
    django_db_user: django_user
    django_db_password: django_password
    django_stack_app_name: pressfreedom
    django_secret_key: f1822d2fe58daeadc88e0e4eef2f155fc3edd3713ff9a5d1e27696afd9231d905db51c98dc
    django_stack_es_host_url: disable
    nginx_sites:
      default:
        - listen 80
        - return 301 https://localhost:4443$request_uri
      encrypted:
        - listen 443 ssl
        - location / { proxy_pass http://127.0.0.1:8000/; }
        - location /static { alias /var/www/django-static; }
        - location /media { alias /var/www/django-media; }
        - ssl_certificate /etc/ssl/certs/{{ansible_fqdn}}.pem
        - ssl_certificate_key /etc/ssl/private/{{ansible_fqdn}}-key.pem
    nodejs_version: "6.x"
    nodejs_install_npm_user: "{{ django_stack_gcorn_user }}"
    django_stack_deploy_src: "{{ lookup('pipe', 'pwd') }}/../" 
    django_stack_manage_post:
      - createdevdata
    django_stack_npm_commands:
      - install
      - run build
    django_stack_gunicorn_opt_envs:
      DJANGO_ALLOWED_HOSTS: "'*'"
      MAILGUN_FAIL_SILENTLY: True
      DJANGO_SETTINGS_MODULE: pressfreedom.settings.production
      DJANGO_JSON_LOG: False
      DJANGO_DB_NAME: pressfreedom
    django_stack_gcorn_app_settings: pressfreedom.settings.production
    django_stack_force_refresh: true
