// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders BarChart with mocked data 1`] = `
<React.Fragment>
  <svg
    aria-labelledby=""
    style={
      {
        "display": "block",
        "marginBottom": 0,
        "marginLeft": 0,
        "marginRight": 2,
        "marginTop": 0,
      }
    }
    viewBox={
      [
        0,
        0,
        480,
        500,
      ]
    }
    width="100%"
  >
    <g>
      <AnimatedDataset
        attrs={
          {
            "shapeRendering": "crispEdges",
            "stroke": "black",
            "strokeWidth": [Function],
            "x1": [Function],
            "x2": 470,
            "y1": [Function],
            "y2": [Function],
          }
        }
        dataset={
          [
            0,
            20,
            40,
            60,
            80,
            100,
          ]
        }
        duration={250}
        init={
          {
            "x1": [Function],
            "x2": 470,
            "y1": 460,
            "y2": 460,
          }
        }
        keyFn={[Function]}
        tag="line"
      />
      <AnimatedDataset
        attrs={
          {
            "fontFamily": "var(--font-mono)",
            "fontSize": "12px",
            "opacity": 1,
            "text": [Function],
            "textAnchor": "end",
            "x": 470,
            "y": [Function],
          }
        }
        dataset={
          [
            0,
            20,
            40,
            60,
            80,
            100,
          ]
        }
        duration={250}
        init={
          {
            "opacity": 0,
            "x": 470,
            "y": 460,
          }
        }
        keyFn={[Function]}
        tag="text"
      />
    </g>
    <AnimatedDataset
      attrs={
        {
          "cursor": "inherit",
          "fill": [Function],
          "height": [Function],
          "shapeRendering": "crispEdges",
          "stroke": [Function],
          "strokeWidth": 5,
          "width": 47.04918032786885,
          "x": [Function],
          "y": [Function],
        }
      }
      dataset={
        [
          {
            "index": 0,
            "month": 10,
            "monthName": "Nov",
            "numberOfIncidents": 0,
          },
          {
            "index": 1,
            "month": 11,
            "monthName": "Dec",
            "numberOfIncidents": 0,
          },
          {
            "index": 2,
            "month": 0,
            "monthName": "Jan",
            "numberOfIncidents": 0,
          },
          {
            "index": 3,
            "month": 1,
            "monthName": "Feb",
            "numberOfIncidents": 0,
          },
          {
            "index": 4,
            "month": 2,
            "monthName": "Mar",
            "numberOfIncidents": 0,
          },
          {
            "index": 5,
            "month": 3,
            "monthName": "Apr",
            "numberOfIncidents": 0,
          },
        ]
      }
      duration={250}
      durationByAttr={
        {
          "fill": 0,
          "stroke": 0,
        }
      }
      init={
        {
          "height": 0,
          "width": 47.04918032786885,
          "x": [Function],
          "y": 460,
        }
      }
      keyFn={[Function]}
      tag="rect"
    />
    <g
      style={
        {
          "pointerEvents": "auto",
        }
      }
    >
      <DynamicWrapper
        wrapperComponent={
          <a
            aria-label="Nov: 0 incidents"
            role="link"
          />
        }
      >
        <rect
          height={0}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          shapeRendering="crispEdges"
          style={
            {
              "cursor": "inherit",
              "opacity": 0,
            }
          }
          width={68.33333333333333}
          x={20}
          y={460}
        >
          <title>
            Nov
            : 
            0
             
            incidents
          </title>
        </rect>
      </DynamicWrapper>
    </g>
    <g
      style={
        {
          "pointerEvents": "auto",
        }
      }
    >
      <DynamicWrapper
        wrapperComponent={
          <a
            aria-label="Dec: 0 incidents"
            role="link"
          />
        }
      >
        <rect
          height={0}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          shapeRendering="crispEdges"
          style={
            {
              "cursor": "inherit",
              "opacity": 0,
            }
          }
          width={68.33333333333333}
          x={88.33333333333333}
          y={460}
        >
          <title>
            Dec
            : 
            0
             
            incidents
          </title>
        </rect>
      </DynamicWrapper>
    </g>
    <g
      style={
        {
          "pointerEvents": "auto",
        }
      }
    >
      <DynamicWrapper
        wrapperComponent={
          <a
            aria-label="Jan: 0 incidents"
            role="link"
          />
        }
      >
        <rect
          height={0}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          shapeRendering="crispEdges"
          style={
            {
              "cursor": "inherit",
              "opacity": 0,
            }
          }
          width={68.33333333333333}
          x={156.66666666666666}
          y={460}
        >
          <title>
            Jan
            : 
            0
             
            incidents
          </title>
        </rect>
      </DynamicWrapper>
    </g>
    <g
      style={
        {
          "pointerEvents": "auto",
        }
      }
    >
      <DynamicWrapper
        wrapperComponent={
          <a
            aria-label="Feb: 0 incidents"
            role="link"
          />
        }
      >
        <rect
          height={0}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          shapeRendering="crispEdges"
          style={
            {
              "cursor": "inherit",
              "opacity": 0,
            }
          }
          width={68.33333333333333}
          x={225}
          y={460}
        >
          <title>
            Feb
            : 
            0
             
            incidents
          </title>
        </rect>
      </DynamicWrapper>
    </g>
    <g
      style={
        {
          "pointerEvents": "auto",
        }
      }
    >
      <DynamicWrapper
        wrapperComponent={
          <a
            aria-label="Mar: 0 incidents"
            role="link"
          />
        }
      >
        <rect
          height={0}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          shapeRendering="crispEdges"
          style={
            {
              "cursor": "inherit",
              "opacity": 0,
            }
          }
          width={68.33333333333333}
          x={293.3333333333333}
          y={460}
        >
          <title>
            Mar
            : 
            0
             
            incidents
          </title>
        </rect>
      </DynamicWrapper>
    </g>
    <g
      style={
        {
          "pointerEvents": "auto",
        }
      }
    >
      <DynamicWrapper
        wrapperComponent={
          <a
            aria-label="Apr: 0 incidents"
            role="link"
          />
        }
      >
        <rect
          height={0}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          shapeRendering="crispEdges"
          style={
            {
              "cursor": "inherit",
              "opacity": 0,
            }
          }
          width={68.33333333333333}
          x={361.66666666666663}
          y={460}
        >
          <title>
            Apr
            : 
            0
             
            incidents
          </title>
        </rect>
      </DynamicWrapper>
    </g>
    <AnimatedDataset
      attrs={
        {
          "fill": [Function],
          "fontFamily": "var(--font-base)",
          "fontSize": "14px",
          "fontWeight": 500,
          "opacity": 1,
          "text": [Function],
          "textAnchor": "middle",
          "x": [Function],
          "y": 480,
        }
      }
      dataset={
        [
          {
            "index": 0,
            "month": 10,
            "monthName": "Nov",
            "numberOfIncidents": 0,
          },
          {
            "index": 1,
            "month": 11,
            "monthName": "Dec",
            "numberOfIncidents": 0,
          },
          {
            "index": 2,
            "month": 0,
            "monthName": "Jan",
            "numberOfIncidents": 0,
          },
          {
            "index": 3,
            "month": 1,
            "monthName": "Feb",
            "numberOfIncidents": 0,
          },
          {
            "index": 4,
            "month": 2,
            "monthName": "Mar",
            "numberOfIncidents": 0,
          },
          {
            "index": 5,
            "month": 3,
            "monthName": "Apr",
            "numberOfIncidents": 0,
          },
        ]
      }
      duration={250}
      durationByAttr={
        {
          "fill": 0,
        }
      }
      init={
        {
          "opacity": 0,
          "x": [Function],
          "y": 480,
        }
      }
      keyFn={[Function]}
      tag="text"
    />
  </svg>
</React.Fragment>
`;
