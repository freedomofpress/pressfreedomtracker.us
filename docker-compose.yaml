---
version: "3"
networks:
  app:
services:
  postgresql:
    image: postgres:13
    init: true
    ports:
      - "5432:5432"
    volumes:
      - ./:/django:ro
    environment:
      POSTGRES_PASSWORD: trackerpassword
      POSTGRES_USER: tracker
      POSTGRES_DB: trackerdb
    user: postgres
    networks:
      app:
        aliases:
          - db

  selenium:
    image: selenium/standalone-firefox-debug:latest
    ports:
      - "127.0.0.1::5900"
    networks:
      app:
        aliases:
          - selenium

  node:
    init: true
    build:
      context: .
      dockerfile: devops/docker/NodeDockerfile
      args:
        NPM_VER: 9.6.0
        USERID: ${UID:?err}
    volumes:
      - ./:/django
    working_dir: /django
    user: ${UID:?err}
    networks:
      - app

  node-chart-pregenerator:
    init: true
    build:
      context: .
      dockerfile: devops/docker/NodeChartPregeneratorDockerfile
      args:
        NPM_VER: 9.6.0
        USERID: ${UID:?err}
    volumes:
      - ./:/django
    environment:
      DJANGO_HOST: app
    ports:
      - "127.0.0.1:3000:3000"
    working_dir: /django
    user: ${UID:?err}
    networks:
      - app

  django:
    init: true
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: devops/docker/DevDjangoDockerfile
      args:
        USERID: ${UID:?err}
    depends_on:
      - node
      - postgresql
    environment:
      DJANGO_ALLOWED_HOSTS: app
      DJANGO_CREATEDEVDATA: "${DJANGO_CREATEDEVDATA:-no}"
      DJANGO_DB_PASSWORD: trackerpassword
      DJANGO_DB_USER: tracker
      DJANGO_DB_NAME: trackerdb
      DJANGO_DB_PORT: 5432
      DJANGO_DB_HOST: db
      DJANGO_XMLTEST_OUTPUT: "yes"
      DEPLOY_ENV: dev
      DJANGO_PROFILE: "${DJANGO_PROFILE:-no}"
      PYINSTRUMENT: "${PYINSTRUMENT:-no}"
      SELENIUM_HOST: selenium
    working_dir: /django
    volumes:
      - ./:/django
    ports:
      - "127.0.0.1:8000:8000"
    networks:
      app:
        aliases:
          - app
